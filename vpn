#!/bin/bash

######################################################################
#
# Wireguard connection/disconnection helper for AzireVPN.
#
# Copyright © 2020 Aral Balkan, Small Technology Foundation.
# License: AGPL version 3.0 or later.
#
# Like this? Fund us! https://small-tech.org/fund-us
#
######################################################################

set -e

version='1.4.0'

# AzireVPN uses purples; so shall we :)
darkPurpleBackground='\e[48;5;54m'
lightPurpleForeground='\e[38;5;177m'
padding='  '
lineStart="${padding}${darkPurpleBackground}${lightPurpleForeground}"
lineEnd='\e[0m'

echo
echo -e "${lineStart}                                             ${lineEnd}"
echo -e "${lineStart}  vpn v${version} ­– AzireVPN Wireguard interface  ${lineEnd}"
echo -e "${lineStart}                                             ${lineEnd}"
echo

action='up'

currentConnection=`ifconfig | grep azirevpn- | cut -c10-12`

declare -A serverCodesToLocations
serverCodesToLocations=(
  ['ca1']='Canada'
  ['dk1']='Denmark'
  ['es1']='Spain'
  ['nl1']='Netherlands'
  ['no1']='Norway'
  ['se1']='Sweden'
  ['se2']='Sweden (2)'
  ['th1']='Thailand'
  ['uk1']='UK'
  ['us1']='US'
)

declare -A locationsToServerCodes
locationsToServerCodes=(
  ['canada']='ca1'
  ['denmark']='dk1'
  ['spain']='es1'
  ['netherlands']='nl1'
  ['norway']='no1'
  ['sweden']='se1'
  ['sweden2']='se2'
  ['thailand']='th1'
  ['uk']='uk1'
  ['us']='us1'
)

function displayLocations () {
  echo -e "    Currently supported locations and their location codes:"

  output="    Location===    Code\n    ────────────===    ────────────"
  for location in "${!locationsToServerCodes[@]}"
  do
    output="${output}\n    ${serverCodesToLocations[${locationsToServerCodes[${location}]}]}===    $location"
  done
  echo
  echo -e "${output}" | column -t -s ===
}

if [[ $1 == 'help' || $1 == 'h' || $1 == '--help' || $1 == '-h' || $1 == '--help' ]]; then
  output='    vpn [location code]===Turn on VPN and connect to default/specified location.\n'
  output="${output}    vpn off===Turn VPN off.\n"
  output="${output}    vpn ls===List supported locations and location codes.\n"
  output="${output}    vpn ?===Display the current connection status.\n"
  output="${output}    vpn help===Display this help screen."
  echo -e "${output}" | column -t -s ===
  echo
  displayLocations
  echo
  echo "${padding}╔═══════════════════════════════════════════╗"
  echo "${padding}║ Like this? Fund us!                       ║"
  echo "${padding}║                                           ║"
  echo "${padding}║ We’re a tiny, independent not-for-profit. ║"
  echo "${padding}║ https://small-tech.org/fund-us            ║"
  echo "${padding}╚═══════════════════════════════════════════╝"
  exit 0
fi

if [[ $1 == '?' ]]; then
  if [[ $currentConnection == '' ]]; then
    echo -e " ❌ You are not connected to AzireVPN via Wireguard.\n"
    exit 1
  fi
  location="${serverCodesToLocations[${currentConnection}]}"
  echo -e " ✅ You’re connected to AzireVPN in ${location} via Wireguard.\n"
  exit 0
fi

if [[ $1 == 'ls' ]]; then
  displayLocations
  exit 0
fi

if [[ $1 == 'off' || $1 == 'down' || $1 == 'disconnect' ]]; then
  action='down'
  if [[ $currentConnection == '' ]]; then
    echo -e " ❌ You are not connected to AzireVPN via Wireguard.\n"
    exit 1
  fi
  serverCode=$currentConnection
  echo -e " 👋 Disconnecting from AzireVPN in ${serverCodesToLocations[${currentConnection}]}…"
else
  location=$1

  if [[ $1 == '' ]]; then
    location='uk'
  fi

  serverCode="${locationsToServerCodes[${location}]}"

  if [[ $currentConnection != '' ]]; then
    if [[ $currentConnection == $serverCode ]]; then
      echo -e " ✅ You’re already connected to AzireVPN in ${serverCodesToLocations[${currentConnection}]}.\n"
      exit
    fi

    printf " 👋 Disconnecting existing connection…"
    wg-quick down "azirevpn-${currentConnection}" > /dev/null 2>&1
    echo
  fi

  echo -e " 📡 Connecting to AzireVPN in ${serverCodesToLocations[${serverCode}]}…"
fi

server="azirevpn-${serverCode}"

wg-quick "${action}" "${server}" > /dev/null 2>&1

echo -e " ✅ Done.\n"
